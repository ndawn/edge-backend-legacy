# Generated by Django 2.0.2 on 2019-01-04 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_submitted', models.BooleanField(default=False, verbose_name='Закрыта')),
                ('closed', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Закрыта')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=1, null=True, verbose_name='Количество')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('cart', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='commerce.Cart', verbose_name='Корзина')),
            ],
            options={
                'verbose_name': 'Элемент корзины',
                'verbose_name_plural': 'Элементы корзины',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=32, verbose_name='Название')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='Обозначение')),
                ('background', models.URLField(blank=True, default=None, null=True, verbose_name='Фоновое изображение')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='commerce.Category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=32, verbose_name='Название')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Метод доставки',
                'verbose_name_plural': 'Методы доставки',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Без названия', max_length=512, verbose_name='Название')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('bought', models.FloatField(blank=True, default=0, verbose_name='Закупочная цена')),
                ('price', models.FloatField(blank=True, default=0, verbose_name='Цена')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество')),
                ('weight', models.FloatField(blank=True, default=100, verbose_name='Вес')),
                ('cover_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='ID обложки')),
                ('active', models.BooleanField(default=False, verbose_name='Активен')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='commerce.Category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Код отслеживания')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='commerce.Cart', verbose_name='Корзина')),
                ('delivery_method', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='commerce.DeliveryMethod', verbose_name='Метод доставки')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=64, verbose_name='Название')),
                ('description', models.CharField(blank=True, default='', max_length=128, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказа',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=32, verbose_name='Название')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Метод оплаты',
                'verbose_name_plural': 'Методы оплаты',
            },
        ),
        migrations.CreateModel(
            name='PriceMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('monthly', 'Месяц'), ('weekly', 'Неделя')], max_length=8, null=True, verbose_name='Тип')),
                ('usd', models.FloatField(default=0.0, verbose_name='Цена в долларах')),
                ('bought', models.FloatField(blank=True, default=0.0, verbose_name='Закупочная цена')),
                ('default', models.FloatField(blank=True, default=0.0, verbose_name='Цена')),
                ('discount', models.FloatField(blank=True, default=0.0, verbose_name='Цена со скидкой')),
                ('superior', models.FloatField(blank=True, default=0.0, verbose_name='Superior цена')),
                ('weight', models.FloatField(blank=True, default=100, verbose_name='Вес')),
            ],
            options={
                'verbose_name': 'Таблица цен',
                'verbose_name_plural': 'Таблицы цен',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, default='', max_length=256, null=True, verbose_name='Полное название')),
                ('short_name', models.CharField(blank=True, default='', max_length=256, null=True, verbose_name='Краткое название')),
                ('abbreviature', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Аббревиатура')),
                ('midtown_code', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name='Код Midtown')),
                ('load_monthly', models.BooleanField(default=True, verbose_name='Месячный')),
                ('load_weekly', models.BooleanField(default=True, verbose_name='Недельный')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='commerce.Category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Издатель',
                'verbose_name_plural': 'Издатели',
            },
        ),
        migrations.AlterUniqueTogether(
            name='pricemap',
            unique_together={('usd', 'mode')},
        ),
        migrations.AddField(
            model_name='order',
            name='payment_method',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='commerce.PaymentMethod', verbose_name='Метод оплаты'),
        ),
        migrations.AddField(
            model_name='order',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='commerce.OrderStatus', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='item',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='commerce.Publisher', verbose_name='Издатель'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='commerce.Item', verbose_name='Товар'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'item')},
        ),
    ]
